[tool.poetry]
name = "quiz_suite"
version = "0.1.0"
description = "A Quiz generation system using LangGraph and LLMs with modular, parallelized architecture"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = "^3.12"
# Core AI/ML Dependencies
langchain = "^0.3.26"
langchain-community = "^0.3.27"
langgraph = "^0.5.3"
langsmith = "^0.4.8"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# LLM and Embedding Dependencies
openai = "^1.6.0"
anthropic = "^0.8.0"
huggingface-hub = "^0.20.0"
transformers = "^4.36.0"
torch = "^2.1.0"
sentence-transformers = "^2.2.0"

# Vector Database
chromadb = ">=0.5.0"
chroma-hnswlib = "^0.7.0"

# Document Processing
unstructured = "^0.11.0"
pymupdf = "^1.23.0"
python-docx = "^1.1.0"
beautifulsoup4 = "^4.12.0"
requests = "^2.31.0"

# Template and Output Generation
jinja2 = "^3.1.0"
mistune = "^3.0.0"

# Async and Performance
aiohttp = "^3.9.0"
asyncio = "^3.4.3"

# Configuration and Environment
python-dotenv = "^1.0.0"
click = "^8.1.0"

# Data Processing
numpy = "^2.1.0"
pandas = "^2.1.0"
matplotlib = "^3.10.5"
seaborn = "^0.13.2"
plotly = "^6.2.0"
pillow = "^11.3.0"
pytesseract = "^0.3.13"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"
pytest-mock = "^3.12.0"

# Code Quality
black = "^23.12.0"
isort = "^5.13.0"
flake8 = "^6.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

# Documentation
sphinx = "^7.2.0"
sphinx-rtd-theme = "^2.0.0"

# Development Tools
ipython = "^8.18.0"
jupyter = "^1.0.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"
pytest-mock = "^3.12.0"

[tool.poetry.scripts]
quiz-generator = "backend.main:main"
generate-quiz = "backend.quiz_generator:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]
known_third_party = ["langchain", "langgraph", "pydantic", "openai", "anthropic"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langgraph.*",
    "chromadb.*",
    "unstructured.*",
    "pymupdf.*",
    "transformers.*",
    "torch.*",
    "sentence_transformers.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=backend",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 